// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  individual
  business
}

model User {
  id              String    @id @default(uuid()) @db.Uuid
  email           String    @unique @db.VarChar(255)
  passwordHash    String    @map("password_hash") @db.VarChar(255)
  phoneNumber     String?   @unique @map("phone_number") @db.VarChar(20)
  fullName        String    @map("full_name") @db.VarChar(255)
  identityNumber  String?   @unique @map("identity_number") @db.VarChar(20)
  userType        UserType  @map("user_type")
  taxId           String?   @map("tax_id") @db.VarChar(50)
  avatarUrl       String?   @map("avatar_url") @db.VarChar(500)
  isVerified      Boolean   @default(false) @map("is_verified")
  isBanned        Boolean   @default(false) @map("is_banned")
  banReason       String?   @map("ban_reason") @db.Text
  bannedAt        DateTime? @map("banned_at") @db.Timestamp
  emailVerifiedAt DateTime? @map("email_verified_at") @db.Timestamp
  ratingScore     Decimal   @default(5.00) @map("rating_score") @db.Decimal(3, 2)
  totalRatings    Int       @default(0) @map("total_ratings")
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt       DateTime  @updatedAt @map("updated_at") @db.Timestamp
  deletedAt       DateTime? @map("deleted_at") @db.Timestamp

  @@map("users")
}
